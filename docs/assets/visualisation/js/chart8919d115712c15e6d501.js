(self.webpackChunkdi_website=self.webpackChunkdi_website||[]).push([[2483],{27653:(t,e,o)=>{"use strict";var n=t.exports={},r=o(99409).locationmodeToLayer,a=o(90831).zL;n.getTopojsonName=function(t){return[t.scope.replace(/ /g,"-"),"_",t.resolution.toString(),"m"].join("")},n.getTopojsonPath=function(t,e){return t+e+".json"},n.getTopojsonFeatures=function(t,e){var o=r[t.locationmode],n=e.objects[o];return a(e,n).features}},99409:(t,e)=>{"use strict";e.projNames={equirectangular:"equirectangular",mercator:"mercator",orthographic:"orthographic","natural earth":"naturalEarth",kavrayskiy7:"kavrayskiy7",miller:"miller",robinson:"robinson",eckert4:"eckert4","azimuthal equal area":"azimuthalEqualArea","azimuthal equidistant":"azimuthalEquidistant","conic equal area":"conicEqualArea","conic conformal":"conicConformal","conic equidistant":"conicEquidistant",gnomonic:"gnomonic",stereographic:"stereographic",mollweide:"mollweide",hammer:"hammer","transverse mercator":"transverseMercator","albers usa":"albersUsa","winkel tripel":"winkel3",aitoff:"aitoff",sinusoidal:"sinusoidal"},e.axesNames=["lonaxis","lataxis"],e.lonaxisSpan={orthographic:180,"azimuthal equal area":360,"azimuthal equidistant":360,"conic conformal":180,gnomonic:160,stereographic:180,"transverse mercator":180,"*":360},e.lataxisSpan={"conic conformal":150,stereographic:179.5,"*":180},e.scopeDefaults={world:{lonaxisRange:[-180,180],lataxisRange:[-90,90],projType:"equirectangular",projRotate:[0,0,0]},usa:{lonaxisRange:[-180,-50],lataxisRange:[15,80],projType:"albers usa"},europe:{lonaxisRange:[-30,60],lataxisRange:[30,85],projType:"conic conformal",projRotate:[15,0,0],projParallels:[0,60]},asia:{lonaxisRange:[22,160],lataxisRange:[-15,55],projType:"mercator",projRotate:[0,0,0]},africa:{lonaxisRange:[-30,60],lataxisRange:[-40,40],projType:"mercator",projRotate:[0,0,0]},"north america":{lonaxisRange:[-180,-45],lataxisRange:[5,85],projType:"conic conformal",projRotate:[-100,0,0],projParallels:[29.5,45.5]},"south america":{lonaxisRange:[-100,-30],lataxisRange:[-60,15],projType:"mercator",projRotate:[0,0,0]}},e.clipPad=.001,e.precision=.1,e.landColor="#F0DC82",e.waterColor="#3399FF",e.locationmodeToLayer={"ISO-3":"countries","USA-states":"subunits","country names":"countries"},e.sphereSVG={type:"Sphere"},e.fillLayers={ocean:1,land:1,lakes:1},e.lineLayers={subunits:1,countries:1,coastlines:1,rivers:1,frame:1},e.layers=["bg","ocean","land","lakes","subunits","countries","coastlines","rivers","lataxis","lonaxis","frame","backplot","frontplot"],e.layersForChoropleth=["bg","ocean","land","subunits","countries","coastlines","lataxis","lonaxis","frame","backplot","rivers","lakes","frontplot"],e.layerNameToAdjective={ocean:"ocean",land:"land",lakes:"lake",subunits:"subunit",countries:"country",coastlines:"coastline",rivers:"river",frame:"frame"}},17011:(t,e,o)=>{"use strict";var n=o(15078),r=o(97997),a=o(34141),i=o(57597),s=o(84474),l=o(87529),c=o(79648),u=o(34682),p=o(5816).getAutoRange,h=o(86962),f=o(80755).prepSelect,d=o(80755).clearSelect,v=o(80755).selectOnClick,g=o(74023),m=o(99409),y=o(94187),b=o(27653),x=o(90831).zL;function w(t){this.id=t.id,this.graphDiv=t.graphDiv,this.container=t.container,this.topojsonURL=t.topojsonURL,this.isStatic=t.staticPlot,this.topojsonName=null,this.topojson=null,this.projection=null,this.scope=null,this.viewInitial=null,this.fitScale=null,this.bounds=null,this.midPt=null,this.hasChoropleth=!1,this.traceHash={},this.layers={},this.basePaths={},this.dataPaths={},this.dataPoints={},this.clipDef=null,this.clipRect=null,this.bgRect=null,this.makeFramework()}o(3233)(n);var j=w.prototype;function M(t,e){var o=m.clipPad,n=t[0]+o,r=t[1]-o,a=e[0]+o,i=e[1]-o;n>0&&r<0&&(r+=360);var s=(r-n)/4;return{type:"Polygon",coordinates:[[[n,a],[n,i],[n+s,i],[n+2*s,i],[n+3*s,i],[r,i],[r,a],[r-s,a],[r-2*s,a],[r-3*s,a],[n,a]]]}}t.exports=function(t){return new w(t)},j.plot=function(t,e,o){var n=this,r=e[this.id],a=[],i=!1;for(var s in m.layerNameToAdjective)if("frame"!==s&&r["show"+s]){i=!0;break}for(var l=0;l<t.length;l++)if(t[0][0].trace.locationmode){i=!0;break}if(i){var c=b.getTopojsonName(r);null!==n.topojson&&c===n.topojsonName||(n.topojsonName=c,void 0===PlotlyGeoAssets.topojson[n.topojsonName]&&a.push(n.fetchTopojson()))}a=a.concat(y.fetchTraceGeoData(t)),o.push(new Promise((function(o,r){Promise.all(a).then((function(){n.topojson=PlotlyGeoAssets.topojson[n.topojsonName],n.update(t,e),o()})).catch(r)})))},j.fetchTopojson=function(){var t=this,e=b.getTopojsonPath(t.topojsonURL,t.topojsonName);return new Promise((function(o,r){n.json(e,(function(n,a){if(n)return 404===n.status?r(new Error(["plotly.js could not find topojson file at",e,".","Make sure the *topojsonURL* plot config option","is set properly."].join(" "))):r(new Error(["unexpected error while fetching topojson file at",e].join(" ")));PlotlyGeoAssets.topojson[t.topojsonName]=a,o()}))}))},j.update=function(t,e){var o=e[this.id];this.hasChoropleth=!1;for(var n=0;n<t.length;n++){var r=t[n],a=r[0].trace;"choropleth"===a.type&&(this.hasChoropleth=!0),!0===a.visible&&a._length>0&&a._module.calcGeoJSON(r,e)}if(!this.updateProjection(t,e)){this.viewInitial&&this.scope===o.scope||this.saveViewInitial(o),this.scope=o.scope,this.updateBaseLayers(e,o),this.updateDims(e,o),this.updateFx(e,o),c.generalUpdatePerTraceModule(this.graphDiv,this,t,o);var i=this.layers.frontplot.select(".scatterlayer");this.dataPoints.point=i.selectAll(".point"),this.dataPoints.text=i.selectAll("text"),this.dataPaths.line=i.selectAll(".js-line");var s=this.layers.backplot.select(".choroplethlayer");this.dataPaths.choropleth=s.selectAll("path"),this.render()}},j.updateProjection=function(t,e){var o=this.graphDiv,i=e[this.id],s=e._size,l=i.domain,c=i.projection,u=i.lonaxis,h=i.lataxis,f=u._ax,d=h._ax,v=this.projection=function(t){for(var e=t.projection.type,o=n.geo[m.projNames[e]](),r=t._isClipped?m.lonaxisSpan[e]/2:null,a=["center","rotate","parallels","clipExtent"],i=function(t){return t?o:[]},s=0;s<a.length;s++){var l=a[s];"function"!=typeof o[l]&&(o[l]=i)}return o.isLonLatOverEdges=function(t){if(null===o(t))return!0;if(r){var e=o.rotate();return n.geo.distance(t,[-e[0],-e[1]])>r*Math.PI/180}return!1},o.getPath=function(){return n.geo.path().projection(o)},o.getBounds=function(t){return o.getPath().bounds(t)},o.fitExtent=function(t,e){var n=t[1][0]-t[0][0],r=t[1][1]-t[0][1],a=o.clipExtent&&o.clipExtent();o.scale(150).translate([0,0]),a&&o.clipExtent(null);var i=o.getBounds(e),s=Math.min(n/(i[1][0]-i[0][0]),r/(i[1][1]-i[0][1])),l=+t[0][0]+(n-s*(i[1][0]+i[0][0]))/2,c=+t[0][1]+(r-s*(i[1][1]+i[0][1]))/2;return a&&o.clipExtent(a),o.scale(150*s).translate([l,c])},o.precision(m.precision),r&&o.clipAngle(r-m.clipPad),o}(i),g=[[s.l+s.w*l.x[0],s.t+s.h*(1-l.y[1])],[s.l+s.w*l.x[1],s.t+s.h*(1-l.y[0])]],y=i.center||{},b=c.rotation||{},x=u.range||[],w=h.range||[];if(i.fitbounds){f._length=g[1][0]-g[0][0],d._length=g[1][1]-g[0][1],f.range=p(o,f),d.range=p(o,d);var j=(f.range[0]+f.range[1])/2,k=(d.range[0]+d.range[1])/2;if(i._isScoped)y={lon:j,lat:k};else if(i._isClipped){y={lon:j,lat:k},b={lon:j,lat:k,roll:b.roll};var S=c.type,T=m.lonaxisSpan[S]/2||180,_=m.lataxisSpan[S]/2||180;x=[j-T,j+T],w=[k-_,k+_]}else y={lon:j,lat:k},b={lon:j,lat:b.lat,roll:b.roll}}v.center([y.lon-b.lon,y.lat-b.lat]).rotate([-b.lon,-b.lat,b.roll]).parallels(c.parallels);var P=M(x,w);v.fitExtent(g,P);var R=this.bounds=v.getBounds(P),L=this.fitScale=v.scale(),F=v.translate();if(!isFinite(R[0][0])||!isFinite(R[0][1])||!isFinite(R[1][0])||!isFinite(R[1][1])||isNaN(F[0])||isNaN(F[0])){for(var C=["fitbounds","projection.rotation","center","lonaxis.range","lataxis.range"],z="Invalid geo settings, relayout'ing to default view.",D={},N=0;N<C.length;N++)D[this.id+"."+C[N]]=null;return this.viewInitial=null,a.warn(z),o._promises.push(r.call("relayout",o,D)),z}if(i.fitbounds){var E=v.getBounds(M(f.range,d.range)),q=Math.min((R[1][0]-R[0][0])/(E[1][0]-E[0][0]),(R[1][1]-R[0][1])/(E[1][1]-E[0][1]));isFinite(q)?v.scale(q*L):a.warn("Something went wrong during"+this.id+"fitbounds computations.")}else v.scale(c.scale*L);var A=this.midPt=[(R[0][0]+R[1][0])/2,(R[0][1]+R[1][1])/2];if(v.translate([F[0]+(A[0]-F[0]),F[1]+(A[1]-F[1])]).clipExtent(R),i._isAlbersUsa){var I=v([y.lon,y.lat]),O=v.translate();v.translate([O[0]-(I[0]-O[0]),O[1]-(I[1]-O[1])])}},j.updateBaseLayers=function(t,e){var o=this,r=o.topojson,a=o.layers,l=o.basePaths;function c(t){return"lonaxis"===t||"lataxis"===t}function p(t){return Boolean(m.lineLayers[t])}function h(t){return Boolean(m.fillLayers[t])}var f=(this.hasChoropleth?m.layersForChoropleth:m.layers).filter((function(t){return p(t)||h(t)?e["show"+t]:!c(t)||e[t].showgrid})),d=o.framework.selectAll(".layer").data(f,String);d.exit().each((function(t){delete a[t],delete l[t],n.select(this).remove()})),d.enter().append("g").attr("class",(function(t){return"layer "+t})).each((function(t){var e=a[t]=n.select(this);"bg"===t?o.bgRect=e.append("rect").style("pointer-events","all"):c(t)?l[t]=e.append("path").style("fill","none"):"backplot"===t?e.append("g").classed("choroplethlayer",!0):"frontplot"===t?e.append("g").classed("scatterlayer",!0):p(t)?l[t]=e.append("path").style("fill","none").style("stroke-miterlimit",2):h(t)&&(l[t]=e.append("path").style("stroke","none"))})),d.order(),d.each((function(o){var n=l[o],a=m.layerNameToAdjective[o];"frame"===o?n.datum(m.sphereSVG):p(o)||h(o)?n.datum(x(r,r.objects[o])):c(o)&&n.datum(function(t,e,o){var n,r,a,i=e[t],s=m.scopeDefaults[e.scope];"lonaxis"===t?(n=s.lonaxisRange,r=s.lataxisRange,a=function(t,e){return[t,e]}):"lataxis"===t&&(n=s.lataxisRange,r=s.lonaxisRange,a=function(t,e){return[e,t]});var l={type:"linear",range:[n[0],n[1]-1e-6],tick0:i.tick0,dtick:i.dtick};u.setConvert(l,o);var c=u.calcTicks(l);e.isScoped||"lonaxis"!==t||c.pop();for(var p=c.length,h=new Array(p),f=0;f<p;f++)for(var d=c[f].x,v=h[f]=[],g=r[0];g<r[1]+2.5;g+=2.5)v.push(a(d,g));return{type:"MultiLineString",coordinates:h}}(o,e,t)).call(i.stroke,e[o].gridcolor).call(s.dashLine,"",e[o].gridwidth),p(o)?n.call(i.stroke,e[a+"color"]).call(s.dashLine,"",e[a+"width"]):h(o)&&n.call(i.fill,e[a+"color"])}))},j.updateDims=function(t,e){var o=this.bounds,n=(e.framewidth||0)/2,r=o[0][0]-n,a=o[0][1]-n,l=o[1][0]-r+n,c=o[1][1]-a+n;s.setRect(this.clipRect,r,a,l,c),this.bgRect.call(s.setRect,r,a,l,c).call(i.fill,e.bgcolor),this.xaxis._offset=r,this.xaxis._length=l,this.yaxis._offset=a,this.yaxis._length=c},j.updateFx=function(t,e){var o=this,a=o.graphDiv,i=o.bgRect,s=t.dragmode,c=t.clickmode;if(!o.isStatic){var u;"select"===s?u=function(t,e){(t.range={})[o.id]=[m([e.xmin,e.ymin]),m([e.xmax,e.ymax])]}:"lasso"===s&&(u=function(t,e,n){(t.lassoPoints={})[o.id]=n.filtered.map(m)});var p={element:o.bgRect.node(),gd:a,plotinfo:{id:o.id,xaxis:o.xaxis,yaxis:o.yaxis,fillRangeItems:u},xaxes:[o.xaxis],yaxes:[o.yaxis],subplot:o.id,clickFn:function(t){2===t&&d(a)}};"pan"===s?(i.node().onmousedown=null,i.call(g(o,e)),i.on("dblclick.zoom",(function(){var t=o.viewInitial,e={};for(var n in t)e[o.id+"."+n]=t[n];r.call("_guiRelayout",a,e),a.emit("plotly_doubleclick",null)})),a._context._scrollZoom.geo||i.on("wheel.zoom",null)):"select"!==s&&"lasso"!==s||(i.on(".zoom",null),p.prepFn=function(t,e,o){f(t,e,o,p,s)},h.init(p)),i.on("mousemove",(function(){var t=o.projection.invert(n.mouse(this));if(!t||isNaN(t[0])||isNaN(t[1]))return h.unhover(a,n.event);o.xaxis.p2c=function(){return t[0]},o.yaxis.p2c=function(){return t[1]},l.hover(a,n.event,o.id)})),i.on("mouseout",(function(){a._dragging||h.unhover(a,n.event)})),i.on("click",(function(){"select"!==s&&"lasso"!==s&&(c.indexOf("select")>-1&&v(n.event,a,[o.xaxis],[o.yaxis],o.id,p),c.indexOf("event")>-1&&l.click(a,n.event))}))}function m(t){return o.projection.invert([t[0]+o.xaxis._offset,t[1]+o.yaxis._offset])}},j.makeFramework=function(){var t=this,e=t.graphDiv,o=e._fullLayout,r="clip"+o._uid+t.id;t.clipDef=o._clips.append("clipPath").attr("id",r),t.clipRect=t.clipDef.append("rect"),t.framework=n.select(t.container).append("g").attr("class","geo "+t.id).call(s.setClipUrl,r,e),t.project=function(e){var o=t.projection(e);return o?[o[0]-t.xaxis._offset,o[1]-t.yaxis._offset]:[null,null]},t.xaxis={_id:"x",c2p:function(e){return t.project(e)[0]}},t.yaxis={_id:"y",c2p:function(e){return t.project(e)[1]}},t.mockAxis={type:"linear",showexponent:"all",exponentformat:"B"},u.setConvert(t.mockAxis,o)},j.saveViewInitial=function(t){var e,o=t.center||{},n=t.projection,r=n.rotation||{};this.viewInitial={fitbounds:t.fitbounds,"projection.scale":n.scale},e=t._isScoped?{"center.lon":o.lon,"center.lat":o.lat}:t._isClipped?{"projection.rotation.lon":r.lon,"projection.rotation.lat":r.lat}:{"center.lon":o.lon,"center.lat":o.lat,"projection.rotation.lon":r.lon},a.extendFlat(this.viewInitial,e)},j.render=function(){var t,e=this.projection,o=e.getPath();function n(t){var o=e(t.lonlat);return o?"translate("+o[0]+","+o[1]+")":null}function r(t){return e.isLonLatOverEdges(t.lonlat)?"none":null}for(t in this.basePaths)this.basePaths[t].attr("d",o);for(t in this.dataPaths)this.dataPaths[t].attr("d",(function(t){return o(t.geojson)}));for(t in this.dataPoints)this.dataPoints[t].attr("display",r).attr("transform",n)}},42483:(t,e,o)=>{"use strict";var n=o(67763).AU,r=o(34141).counterRegex,a=o(17011),i="geo",s=r(i),l={};l.geo={valType:"subplotid",role:"info",dflt:i,editType:"calc",description:["Sets a reference between this trace's geospatial coordinates and","a geographic map.","If *geo* (the default value), the geospatial coordinates refer to","`layout.geo`.","If *geo2*, the geospatial coordinates refer to `layout.geo2`,","and so on."].join(" ")},t.exports={attr:i,name:i,idRoot:i,idRegex:s,attrRegex:s,attributes:l,layoutAttributes:o(86959),supplyLayoutDefaults:o(87957),plot:function(t){for(var e=t._fullLayout,o=t.calcdata,r=e._subplots.geo,s=0;s<r.length;s++){var l=r[s],c=n(o,i,l),u=e[l]._subplot;u||(u=a({id:l,graphDiv:t,container:e._geolayer.node(),topojsonURL:t._context.topojsonURL,staticPlot:t._context.staticPlot}),e[l]._subplot=u),u.plot(c,e,t._promises)}},updateFx:function(t){for(var e=t._fullLayout,o=e._subplots.geo,n=0;n<o.length;n++){var r=e[o[n]];r._subplot.updateFx(e,r)}},clean:function(t,e,o,n){for(var r=n._subplots.geo||[],a=0;a<r.length;a++){var i=r[a],s=n[i]._subplot;!e[i]&&s&&(s.framework.remove(),s.clipDef.remove())}}}},86959:(t,e,o)=>{"use strict";var n=o(28604),r=o(72910).Y,a=o(99409),i=o(15716).overrideAll,s={range:{valType:"info_array",role:"info",items:[{valType:"number"},{valType:"number"}],description:["Sets the range of this axis (in degrees),","sets the map's clipped coordinates."].join(" ")},showgrid:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not graticule are shown on the map."},tick0:{valType:"number",role:"info",dflt:0,description:["Sets the graticule's starting tick longitude/latitude."].join(" ")},dtick:{valType:"number",role:"info",description:["Sets the graticule's longitude/latitude tick step."].join(" ")},gridcolor:{valType:"color",role:"style",dflt:n.lightLine,description:["Sets the graticule's stroke color."].join(" ")},gridwidth:{valType:"number",role:"style",min:0,dflt:1,description:["Sets the graticule's stroke width (in px)."].join(" ")}};(t.exports=i({domain:r({name:"geo"},{description:["Note that geo subplots are constrained by domain.","In general, when `projection.scale` is set to 1.","a map will fit either its x or y domain, but not both."].join(" ")}),fitbounds:{valType:"enumerated",values:[!1,"locations","geojson"],dflt:!1,role:"info",editType:"plot",description:["Determines if this subplot's view settings are auto-computed to fit trace data.","On scoped maps, setting `fitbounds` leads to `center.lon` and `center.lat` getting auto-filled.","On maps with a non-clipped projection, setting `fitbounds` leads to `center.lon`, `center.lat`,","and `projection.rotation.lon` getting auto-filled.","On maps with a clipped projection, setting `fitbounds` leads to `center.lon`, `center.lat`,","`projection.rotation.lon`, `projection.rotation.lat`, `lonaxis.range` and `lonaxis.range`","getting auto-filled.","If *locations*, only the trace's visible locations are considered in the `fitbounds` computations.","If *geojson*, the entire trace input `geojson` (if provided) is considered in the `fitbounds` computations,","Defaults to *false*."].join(" ")},resolution:{valType:"enumerated",values:[110,50],role:"info",dflt:110,coerceNumber:!0,description:["Sets the resolution of the base layers.","The values have units of km/mm","e.g. 110 corresponds to a scale ratio of 1:110,000,000."].join(" ")},scope:{valType:"enumerated",role:"info",values:Object.keys(a.scopeDefaults),dflt:"world",description:"Set the scope of the map."},projection:{type:{valType:"enumerated",role:"info",values:Object.keys(a.projNames),description:"Sets the projection type."},rotation:{lon:{valType:"number",role:"info",description:["Rotates the map along parallels","(in degrees East).","Defaults to the center of the `lonaxis.range` values."].join(" ")},lat:{valType:"number",role:"info",description:["Rotates the map along meridians","(in degrees North)."].join(" ")},roll:{valType:"number",role:"info",description:["Roll the map (in degrees)","For example, a roll of *180* makes the map appear upside down."].join(" ")}},parallels:{valType:"info_array",role:"info",items:[{valType:"number"},{valType:"number"}],description:["For conic projection types only.","Sets the parallels (tangent, secant)","where the cone intersects the sphere."].join(" ")},scale:{valType:"number",role:"info",min:0,dflt:1,description:["Zooms in or out on the map view.","A scale of *1* corresponds to the largest zoom level","that fits the map's lon and lat ranges. "].join(" ")}},center:{lon:{valType:"number",role:"info",description:["Sets the longitude of the map's center.","By default, the map's longitude center lies at the middle of the longitude range","for scoped projection and above `projection.rotation.lon` otherwise."].join(" ")},lat:{valType:"number",role:"info",description:["Sets the latitude of the map's center.","For all projection types, the map's latitude center lies","at the middle of the latitude range by default."].join(" ")}},visible:{valType:"boolean",role:"info",dflt:!0,description:"Sets the default visibility of the base layers."},showcoastlines:{valType:"boolean",role:"info",description:"Sets whether or not the coastlines are drawn."},coastlinecolor:{valType:"color",role:"style",dflt:n.defaultLine,description:"Sets the coastline color."},coastlinewidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the coastline stroke width (in px)."},showland:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not land masses are filled in color."},landcolor:{valType:"color",role:"style",dflt:a.landColor,description:"Sets the land mass color."},showocean:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not oceans are filled in color."},oceancolor:{valType:"color",role:"style",dflt:a.waterColor,description:"Sets the ocean color"},showlakes:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not lakes are drawn."},lakecolor:{valType:"color",role:"style",dflt:a.waterColor,description:"Sets the color of the lakes."},showrivers:{valType:"boolean",role:"info",dflt:!1,description:"Sets whether or not rivers are drawn."},rivercolor:{valType:"color",role:"style",dflt:a.waterColor,description:"Sets color of the rivers."},riverwidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the stroke width (in px) of the rivers."},showcountries:{valType:"boolean",role:"info",description:"Sets whether or not country boundaries are drawn."},countrycolor:{valType:"color",role:"style",dflt:n.defaultLine,description:"Sets line color of the country boundaries."},countrywidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets line width (in px) of the country boundaries."},showsubunits:{valType:"boolean",role:"info",description:["Sets whether or not boundaries of subunits within countries","(e.g. states, provinces) are drawn."].join(" ")},subunitcolor:{valType:"color",role:"style",dflt:n.defaultLine,description:"Sets the color of the subunits boundaries."},subunitwidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the stroke width (in px) of the subunits boundaries."},showframe:{valType:"boolean",role:"info",description:"Sets whether or not a frame is drawn around the map."},framecolor:{valType:"color",role:"style",dflt:n.defaultLine,description:"Sets the color the frame."},framewidth:{valType:"number",role:"style",min:0,dflt:1,description:"Sets the stroke width (in px) of the frame."},bgcolor:{valType:"color",role:"style",dflt:n.background,description:"Set the background color of the map"},lonaxis:s,lataxis:s},"plot","from-root")).uirevision={valType:"any",role:"info",editType:"none",description:["Controls persistence of user-driven changes in the view","(projection and center). Defaults to `layout.uirevision`."].join(" ")}},87957:(t,e,o)=>{"use strict";var n=o(34141),r=o(96357),a=o(67763).NG,i=o(99409),s=o(86959),l=i.axesNames;function c(t,e,o,r){var s=a(r.fullData,"geo",r.id).map((function(t){return t._expandedIndex})),c=o("resolution"),u=o("scope"),p=i.scopeDefaults[u],h=o("projection.type",p.projType),f=e._isAlbersUsa="albers usa"===h;f&&(u=e.scope="usa");var d=e._isScoped="world"!==u,v=e._isConic=-1!==h.indexOf("conic"),g=e._isClipped=!!i.lonaxisSpan[h];if(!1===t.visible){var m=n.extendDeep({},e._template);m.showcoastlines=!1,m.showcountries=!1,m.showframe=!1,m.showlakes=!1,m.showland=!1,m.showocean=!1,m.showrivers=!1,m.showsubunits=!1,m.lonaxis&&(m.lonaxis.showgrid=!1),m.lataxis&&(m.lataxis.showgrid=!1),e._template=m}for(var y=o("visible"),b=0;b<l.length;b++){var x,w=l[b],j=[30,10][b];if(d)x=p[w+"Range"];else{var M=i[w+"Span"],k=(M[h]||M["*"])/2,S=o("projection.rotation."+w.substr(0,3),p.projRotate[b]);x=[S-k,S+k]}var T=o(w+".range",x);o(w+".tick0"),o(w+".dtick",j),o(w+".showgrid",!!y&&void 0)&&(o(w+".gridcolor"),o(w+".gridwidth")),e[w]._ax={type:"linear",_id:w.slice(0,3),_traceIndices:s,setScale:n.identity,c2l:n.identity,r2l:n.identity,autorange:!0,range:T.slice(),_m:1,_input:{}}}var _=e.lonaxis.range,P=e.lataxis.range,R=_[0],L=_[1];R>0&&L<0&&(L+=360);var F,C,z,D=(R+L)/2;if(!f){var N=d?p.projRotate:[D,0,0];F=o("projection.rotation.lon",N[0]),o("projection.rotation.lat",N[1]),o("projection.rotation.roll",N[2]),o("showcoastlines",!d&&y)&&(o("coastlinecolor"),o("coastlinewidth")),o("showocean",!!y&&void 0)&&o("oceancolor")}f?(C=-96.6,z=38.7):(C=d?D:F,z=(P[0]+P[1])/2),o("center.lon",C),o("center.lat",z),v&&o("projection.parallels",p.projParallels||[0,60]),o("projection.scale"),o("showland",!!y&&void 0)&&o("landcolor"),o("showlakes",!!y&&void 0)&&o("lakecolor"),o("showrivers",!!y&&void 0)&&(o("rivercolor"),o("riverwidth")),o("showcountries",d&&"usa"!==u&&y)&&(o("countrycolor"),o("countrywidth")),("usa"===u||"north america"===u&&50===c)&&(o("showsubunits",y),o("subunitcolor"),o("subunitwidth")),d||o("showframe",y)&&(o("framecolor"),o("framewidth")),o("bgcolor"),o("fitbounds")&&(delete e.projection.scale,d?(delete e.center.lon,delete e.center.lat):g?(delete e.center.lon,delete e.center.lat,delete e.projection.rotation.lon,delete e.projection.rotation.lat,delete e.lonaxis.range,delete e.lataxis.range):(delete e.center.lon,delete e.center.lat,delete e.projection.rotation.lon))}t.exports=function(t,e,o){r(t,e,o,{type:"geo",attributes:s,handleDefaults:c,fullData:o,partition:"y"})}},3233:t=>{"use strict";t.exports=function(t){function e(t,e){return{type:"Feature",id:t.id,properties:t.properties,geometry:o(t.geometry,e)}}function o(e,n){if(!e)return null;if("GeometryCollection"===e.type)return{type:"GeometryCollection",geometries:object.geometries.map((function(t){return o(t,n)}))};if(!c.hasOwnProperty(e.type))return null;var r=c[e.type];return t.geo.stream(e,n(r)),r.result()}t.geo.project=function(t,e){var r=e.stream;if(!r)throw new Error("not yet supported");return(t&&n.hasOwnProperty(t.type)?n[t.type]:o)(t,r)};var n={Feature:e,FeatureCollection:function(t,o){return{type:"FeatureCollection",features:t.features.map((function(t){return e(t,o)}))}}},r=[],a=[],i={point:function(t,e){r.push([t,e])},result:function(){var t=r.length?r.length<2?{type:"Point",coordinates:r[0]}:{type:"MultiPoint",coordinates:r}:null;return r=[],t}},s={lineStart:u,point:function(t,e){r.push([t,e])},lineEnd:function(){r.length&&(a.push(r),r=[])},result:function(){var t=a.length?a.length<2?{type:"LineString",coordinates:a[0]}:{type:"MultiLineString",coordinates:a}:null;return a=[],t}},l={polygonStart:u,lineStart:u,point:function(t,e){r.push([t,e])},lineEnd:function(){var t=r.length;if(t){do{r.push(r[0].slice())}while(++t<4);a.push(r),r=[]}},polygonEnd:u,result:function(){if(!a.length)return null;var t=[],e=[];return a.forEach((function(o){!function(t){if((e=t.length)<4)return!1;for(var e,o=0,n=t[e-1][1]*t[0][0]-t[e-1][0]*t[0][1];++o<e;)n+=t[o-1][1]*t[o][0]-t[o-1][0]*t[o][1];return n<=0}(o)?e.push(o):t.push([o])})),e.forEach((function(e){var o=e[0];t.some((function(t){if(function(t,e){for(var o=e[0],n=e[1],r=!1,a=0,i=t.length,s=i-1;a<i;s=a++){var l=t[a],c=l[0],u=l[1],p=t[s],h=p[0],f=p[1];u>n^f>n&&o<(h-c)*(n-u)/(f-u)+c&&(r=!r)}return r}(t[0],o))return t.push(e),!0}))||t.push([e])})),a=[],t.length?t.length>1?{type:"MultiPolygon",coordinates:t}:{type:"Polygon",coordinates:t[0]}:null}},c={Point:i,MultiPoint:i,LineString:s,MultiLineString:s,Polygon:l,MultiPolygon:l,Sphere:l};function u(){}var p=1e-6,h=Math.PI,f=h/2,d=(Math.sqrt(h),h/180),v=180/h;function g(t){return t>1?f:t<-1?-f:Math.asin(t)}function m(t){return t>1?0:t<-1?h:Math.acos(t)}var y=t.geo.projection,b=t.geo.projectionMutator;function x(t,e){var o=(2+f)*Math.sin(e);e/=2;for(var n=0,r=1/0;n<10&&Math.abs(r)>p;n++){var a=Math.cos(e);e-=r=(e+Math.sin(e)*(a+2)-o)/(2*a*(1+a))}return[2/Math.sqrt(h*(4+h))*t*(1+Math.cos(e)),2*Math.sqrt(h/(4+h))*Math.sin(e)]}t.geo.interrupt=function(e){var o,n=[[[[-h,0],[0,f],[h,0]]],[[[-h,0],[0,-f],[h,0]]]];function r(t,o){for(var r=o<0?-1:1,a=n[+(o<0)],i=0,s=a.length-1;i<s&&t>a[i][2][0];++i);var l=e(t-a[i][1][0],o);return l[0]+=e(a[i][1][0],r*o>r*a[i][0][1]?a[i][0][1]:o)[0],l}function a(){o=n.map((function(t){return t.map((function(t){var o,n=e(t[0][0],t[0][1])[0],r=e(t[2][0],t[2][1])[0],a=e(t[1][0],t[0][1])[1],i=e(t[1][0],t[1][1])[1];return a>i&&(o=a,a=i,i=o),[[n,a],[r,i]]}))}))}e.invert&&(r.invert=function(t,a){for(var i=o[+(a<0)],s=n[+(a<0)],l=0,u=i.length;l<u;++l){var p=i[l];if(p[0][0]<=t&&t<p[1][0]&&p[0][1]<=a&&a<p[1][1]){var h=e.invert(t-e(s[l][1][0],0)[0],a);return h[0]+=s[l][1][0],c(r(h[0],h[1]),[t,a])?h:null}}});var i=t.geo.projection(r),s=i.stream;function l(t,e){for(var o,n,r,a=-1,i=t.length,s=t[0],l=[];++a<i;){n=((o=t[a])[0]-s[0])/e,r=(o[1]-s[1])/e;for(var c=0;c<e;++c)l.push([s[0]+c*n,s[1]+c*r]);s=o}return l.push(o),l}function c(t,e){return Math.abs(t[0]-e[0])<p&&Math.abs(t[1]-e[1])<p}return i.stream=function(e){var o=i.rotate(),r=s(e),a=(i.rotate([0,0]),s(e));return i.rotate(o),r.sphere=function(){t.geo.stream(function(){for(var e=1e-6,o=[],r=0,a=n[0].length;r<a;++r){var i=180*(f=n[0][r])[0][0]/h,s=180*f[0][1]/h,c=180*f[1][1]/h,u=180*f[2][0]/h,p=180*f[2][1]/h;o.push(l([[i+e,s+e],[i+e,c-e],[u-e,c-e],[u-e,p+e]],30))}for(r=n[1].length-1;r>=0;--r){var f;i=180*(f=n[1][r])[0][0]/h,s=180*f[0][1]/h,c=180*f[1][1]/h,u=180*f[2][0]/h,p=180*f[2][1]/h,o.push(l([[u-e,p-e],[u-e,c+e],[i+e,c+e],[i+e,s-e]],30))}return{type:"Polygon",coordinates:[t.merge(o)]}}(),a)},r},i.lobes=function(t){return arguments.length?(n=t.map((function(t){return t.map((function(t){return[[t[0][0]*h/180,t[0][1]*h/180],[t[1][0]*h/180,t[1][1]*h/180],[t[2][0]*h/180,t[2][1]*h/180]]}))})),a(),i):n.map((function(t){return t.map((function(t){return[[180*t[0][0]/h,180*t[0][1]/h],[180*t[1][0]/h,180*t[1][1]/h],[180*t[2][0]/h,180*t[2][1]/h]]}))}))},i},x.invert=function(t,e){var o=.5*e*Math.sqrt((4+h)/h),n=g(o),r=Math.cos(n);return[t/(2/Math.sqrt(h*(4+h))*(1+r)),g((n+o*(r+2))/(2+f))]},(t.geo.eckert4=function(){return y(x)}).raw=x;var w=t.geo.azimuthalEqualArea.raw;function j(t,e){if(arguments.length<2&&(e=t),1===e)return w;if(e===1/0)return M;function o(o,n){var r=w(o/e,n);return r[0]*=t,r}return o.invert=function(o,n){var r=w.invert(o/t,n);return r[0]*=e,r},o}function M(t,e){return[t*Math.cos(e)/Math.cos(e/=2),2*Math.sin(e)]}function k(t,e){return[3*t/(2*h)*Math.sqrt(h*h/3-e*e),e]}function S(t,e){return[t,1.25*Math.log(Math.tan(h/4+.4*e))]}function T(t){return function(e){var o,n=t*Math.sin(e),r=30;do{e-=o=(e+Math.sin(e)-n)/(1+Math.cos(e))}while(Math.abs(o)>p&&--r>0);return e/2}}M.invert=function(t,e){var o=2*g(e/2);return[t*Math.cos(o/2)/Math.cos(o),o]},(t.geo.hammer=function(){var t=2,e=b(j),o=e(t);return o.coefficient=function(o){return arguments.length?e(t=+o):t},o}).raw=j,k.invert=function(t,e){return[2/3*h*t/Math.sqrt(h*h/3-e*e),e]},(t.geo.kavrayskiy7=function(){return y(k)}).raw=k,S.invert=function(t,e){return[t,2.5*Math.atan(Math.exp(.8*e))-.625*h]},(t.geo.miller=function(){return y(S)}).raw=S,T(h);var _=function(t,e,o){var n=T(o);function r(o,r){return[t*o*Math.cos(r=n(r)),e*Math.sin(r)]}return r.invert=function(n,r){var a=g(r/e);return[n/(t*Math.cos(a)),g((2*a+Math.sin(2*a))/o)]},r}(Math.SQRT2/f,Math.SQRT2,h);function P(t,e){var o=e*e,n=o*o;return[t*(.8707-.131979*o+n*(n*(.003971*o-.001529*n)-.013791)),e*(1.007226+o*(.015085+n*(.028874*o-.044475-.005916*n)))]}(t.geo.mollweide=function(){return y(_)}).raw=_,P.invert=function(t,e){var o,n=e,r=25;do{var a=n*n,i=a*a;n-=o=(n*(1.007226+a*(.015085+i*(.028874*a-.044475-.005916*i)))-e)/(1.007226+a*(.045255+i*(.259866*a-.311325-.005916*11*i)))}while(Math.abs(o)>p&&--r>0);return[t/(.8707+(a=n*n)*(a*(a*a*a*(.003971-.001529*a)-.013791)-.131979)),n]},(t.geo.naturalEarth=function(){return y(P)}).raw=P;var R=[[.9986,-.062],[1,0],[.9986,.062],[.9954,.124],[.99,.186],[.9822,.248],[.973,.31],[.96,.372],[.9427,.434],[.9216,.4958],[.8962,.5571],[.8679,.6176],[.835,.6769],[.7986,.7346],[.7597,.7903],[.7186,.8435],[.6732,.8936],[.6213,.9394],[.5722,.9761],[.5322,1]];function L(t,e){var o,n=Math.min(18,36*Math.abs(e)/h),r=Math.floor(n),a=n-r,i=(o=R[r])[0],s=o[1],l=(o=R[++r])[0],c=o[1],u=(o=R[Math.min(19,++r)])[0],p=o[1];return[t*(l+a*(u-i)/2+a*a*(u-2*l+i)/2),(e>0?f:-f)*(c+a*(p-s)/2+a*a*(p-2*c+s)/2)]}function F(t,e){return[t*Math.cos(e),e]}function C(t,e){var o,n=Math.cos(e),r=(o=m(n*Math.cos(t/=2)))?o/Math.sin(o):1;return[2*n*Math.sin(t)*r,Math.sin(e)*r]}function z(t,e){var o=C(t,e);return[(o[0]+t/f)/2,(o[1]+e)/2]}R.forEach((function(t){t[1]*=1.0144})),L.invert=function(t,e){var o=e/f,n=90*o,r=Math.min(18,Math.abs(n/5)),a=Math.max(0,Math.floor(r));do{var i=R[a][1],s=R[a+1][1],l=R[Math.min(19,a+2)][1],c=l-i,u=l-2*s+i,p=2*(Math.abs(o)-s)/c,h=u/c,g=p*(1-h*p*(1-2*h*p));if(g>=0||1===a){n=(e>=0?5:-5)*(g+r);var m,y=50;do{g=(r=Math.min(18,Math.abs(n)/5))-(a=Math.floor(r)),i=R[a][1],s=R[a+1][1],l=R[Math.min(19,a+2)][1],n-=(m=(e>=0?f:-f)*(s+g*(l-i)/2+g*g*(l-2*s+i)/2)-e)*v}while(Math.abs(m)>1e-12&&--y>0);break}}while(--a>=0);var b=R[a][0],x=R[a+1][0],w=R[Math.min(19,a+2)][0];return[t/(x+g*(w-b)/2+g*g*(w-2*x+b)/2),n*d]},(t.geo.robinson=function(){return y(L)}).raw=L,F.invert=function(t,e){return[t/Math.cos(e),e]},(t.geo.sinusoidal=function(){return y(F)}).raw=F,C.invert=function(t,e){if(!(t*t+4*e*e>h*h+p)){var o=t,n=e,r=25;do{var a,i=Math.sin(o),s=Math.sin(o/2),l=Math.cos(o/2),c=Math.sin(n),u=Math.cos(n),f=Math.sin(2*n),d=c*c,v=u*u,g=s*s,y=1-v*l*l,b=y?m(u*l)*Math.sqrt(a=1/y):a=0,x=2*b*u*s-t,w=b*c-e,j=a*(v*g+b*u*l*d),M=a*(.5*i*f-2*b*c*s),k=.25*a*(f*s-b*c*v*i),S=a*(d*l+b*g*u),T=M*k-S*j;if(!T)break;var _=(w*M-x*S)/T,P=(x*k-w*j)/T;o-=_,n-=P}while((Math.abs(_)>p||Math.abs(P)>p)&&--r>0);return[o,n]}},(t.geo.aitoff=function(){return y(C)}).raw=C,z.invert=function(t,e){var o=t,n=e,r=25;do{var a,i=Math.cos(n),s=Math.sin(n),l=Math.sin(2*n),c=s*s,u=i*i,h=Math.sin(o),d=Math.cos(o/2),v=Math.sin(o/2),g=v*v,y=1-u*d*d,b=y?m(i*d)*Math.sqrt(a=1/y):a=0,x=.5*(2*b*i*v+o/f)-t,w=.5*(b*s+n)-e,j=.5*a*(u*g+b*i*d*c)+.5/f,M=a*(h*l/4-b*s*v),k=.125*a*(l*v-b*s*u*h),S=.5*a*(c*d+b*g*i)+.5,T=M*k-S*j,_=(w*M-x*S)/T,P=(x*k-w*j)/T;o-=_,n-=P}while((Math.abs(_)>p||Math.abs(P)>p)&&--r>0);return[o,n]},(t.geo.winkel3=function(){return y(z)}).raw=z}},74023:(t,e,o)=>{"use strict";var n=o(15078),r=o(34141),a=o(97997),i=Math.PI/180,s=180/Math.PI,l={cursor:"pointer"},c={cursor:"auto"};function u(t,e){return n.behavior.zoom().translate(e.translate()).scale(e.scale())}function p(t,e,o){var n=t.id,i=t.graphDiv,s=i.layout,l=s[n],c=i._fullLayout,u=c[n],p={},h={};function f(t,e){p[n+"."+t]=r.nestedProperty(l,t).get(),a.call("_storeDirectGUIEdit",s,c._preGUI,p);var o=r.nestedProperty(u,t);o.get()!==e&&(o.set(e),r.nestedProperty(l,t).set(e),h[n+"."+t]=e)}o(f),f("projection.scale",e.scale()/t.fitScale),f("fitbounds",!1),i.emit("plotly_relayout",h)}function h(t,e){var o=u(0,e);function r(o){var n=e.invert(t.midPt);o("center.lon",n[0]),o("center.lat",n[1])}return o.on("zoomstart",(function(){n.select(this).style(l)})).on("zoom",(function(){e.scale(n.event.scale).translate(n.event.translate),t.render();var o=e.invert(t.midPt);t.graphDiv.emit("plotly_relayouting",{"geo.projection.scale":e.scale()/t.fitScale,"geo.center.lon":o[0],"geo.center.lat":o[1]})})).on("zoomend",(function(){n.select(this).style(c),p(t,e,r)})),o}function f(t,e){var o,r,a,i,s,h,f,d,v,g=u(0,e);function m(t){return e.invert(t)}function y(o){var n=e.rotate(),r=e.invert(t.midPt);o("projection.rotation.lon",-n[0]),o("center.lon",r[0]),o("center.lat",r[1])}return g.on("zoomstart",(function(){n.select(this).style(l),o=n.mouse(this),r=e.rotate(),a=e.translate(),i=r,s=m(o)})).on("zoom",(function(){if(h=n.mouse(this),function(t){var o=m(t);if(!o)return!0;var n=e(o);return Math.abs(n[0]-t[0])>2||Math.abs(n[1]-t[1])>2}(o))return g.scale(e.scale()),void g.translate(e.translate());e.scale(n.event.scale),e.translate([a[0],n.event.translate[1]]),s?m(h)&&(d=m(h),f=[i[0]+(d[0]-s[0]),r[1],r[2]],e.rotate(f),i=f):s=m(o=h),v=!0,t.render();var l=e.rotate(),c=e.invert(t.midPt);t.graphDiv.emit("plotly_relayouting",{"geo.projection.scale":e.scale()/t.fitScale,"geo.center.lon":c[0],"geo.center.lat":c[1],"geo.projection.rotation.lon":-l[0]})})).on("zoomend",(function(){n.select(this).style(c),v&&p(t,e,y)})),g}function d(t,e){var o,r={r:e.rotate(),k:e.scale()},a=u(0,e),i=function(t){for(var e=0,o=arguments.length,r=[];++e<o;)r.push(arguments[e]);var a=n.dispatch.apply(null,r);return a.of=function(e,o){return function(r){var i;try{i=r.sourceEvent=n.event,r.target=t,n.event=r,a[r.type].apply(e,o)}finally{n.event=i}}},a}(a,"zoomstart","zoom","zoomend"),s=0,h=a.on;function f(t){s++||t({type:"zoomstart"})}function d(t){t({type:"zoom"})}function x(t){--s||t({type:"zoomend"})}function w(t){var o=e.rotate();t("projection.rotation.lon",-o[0]),t("projection.rotation.lat",-o[1])}return a.on("zoomstart",(function(){n.select(this).style(l);var t=n.mouse(this),s=e.rotate(),c=s,u=e.translate(),p=g(s);o=v(e,t),h.call(a,"zoom",(function(){var a=n.mouse(this);if(e.scale(r.k=n.event.scale),o){if(v(e,a)){e.rotate(s).translate(u);var l=v(e,a),h=y(o,l),f=M(m(p,h)),g=r.r=b(f,o,c);isFinite(g[0])&&isFinite(g[1])&&isFinite(g[2])||(g=c),e.rotate(g),c=g}}else o=v(e,t=a);d(i.of(this,arguments))})),f(i.of(this,arguments))})).on("zoomend",(function(){n.select(this).style(c),h.call(a,"zoom",null),x(i.of(this,arguments)),p(t,e,w)})).on("zoom.redraw",(function(){t.render();var o=e.rotate();t.graphDiv.emit("plotly_relayouting",{"geo.projection.scale":e.scale()/t.fitScale,"geo.projection.rotation.lon":-o[0],"geo.projection.rotation.lat":-o[1]})})),n.rebind(a,i,"on")}function v(t,e){var o=t.invert(e);return o&&isFinite(o[0])&&isFinite(o[1])&&function(t){var e=t[0]*i,o=t[1]*i,n=Math.cos(o);return[n*Math.cos(e),n*Math.sin(e),Math.sin(o)]}(o)}function g(t){var e=.5*t[0]*i,o=.5*t[1]*i,n=.5*t[2]*i,r=Math.sin(e),a=Math.cos(e),s=Math.sin(o),l=Math.cos(o),c=Math.sin(n),u=Math.cos(n);return[a*l*u+r*s*c,r*l*u-a*s*c,a*s*u+r*l*c,a*l*c-r*s*u]}function m(t,e){var o=t[0],n=t[1],r=t[2],a=t[3],i=e[0],s=e[1],l=e[2],c=e[3];return[o*i-n*s-r*l-a*c,o*s+n*i+r*c-a*l,o*l-n*c+r*i+a*s,o*c+n*l-r*s+a*i]}function y(t,e){if(t&&e){var o=function(t,e){return[t[1]*e[2]-t[2]*e[1],t[2]*e[0]-t[0]*e[2],t[0]*e[1]-t[1]*e[0]]}(t,e),n=Math.sqrt(k(o,o)),r=.5*Math.acos(Math.max(-1,Math.min(1,k(t,e)))),a=Math.sin(r)/n;return n&&[Math.cos(r),o[2]*a,-o[1]*a,o[0]*a]}}function b(t,e,o){var n=j(e,2,t[0]);n=j(n,1,t[1]),n=j(n,0,t[2]-o[2]);var r,a,i=e[0],l=e[1],c=e[2],u=n[0],p=n[1],h=n[2],f=Math.atan2(l,i)*s,d=Math.sqrt(i*i+l*l);Math.abs(p)>d?(a=(p>0?90:-90)-f,r=0):(a=Math.asin(p/d)*s-f,r=Math.sqrt(d*d-p*p));var v=180-a-2*f,g=(Math.atan2(h,u)-Math.atan2(c,r))*s,m=(Math.atan2(h,u)-Math.atan2(c,-r))*s;return x(o[0],o[1],a,g)<=x(o[0],o[1],v,m)?[a,g,o[2]]:[v,m,o[2]]}function x(t,e,o,n){var r=w(o-t),a=w(n-e);return Math.sqrt(r*r+a*a)}function w(t){return(t%360+540)%360-180}function j(t,e,o){var n=o*i,r=t.slice(),a=0===e?1:0,s=2===e?1:2,l=Math.cos(n),c=Math.sin(n);return r[a]=t[a]*l-t[s]*c,r[s]=t[s]*l+t[a]*c,r}function M(t){return[Math.atan2(2*(t[0]*t[1]+t[2]*t[3]),1-2*(t[1]*t[1]+t[2]*t[2]))*s,Math.asin(Math.max(-1,Math.min(1,2*(t[0]*t[2]-t[3]*t[1]))))*s,Math.atan2(2*(t[0]*t[3]+t[1]*t[2]),1-2*(t[2]*t[2]+t[3]*t[3]))*s]}function k(t,e){for(var o=0,n=0,r=t.length;n<r;++n)o+=t[n]*e[n];return o}t.exports=function(t,e){var o=t.projection;return(e._isScoped?h:e._isClipped?d:f)(t,o)}},90831:(t,e,o)=>{"use strict";function n(t){return t}function r(t,e){return"string"==typeof e&&(e=t.objects[e]),"GeometryCollection"===e.type?{type:"FeatureCollection",features:e.geometries.map((function(e){return a(t,e)}))}:a(t,e)}function a(t,e){var o=e.id,r=e.bbox,a=null==e.properties?{}:e.properties,i=function(t,e){var o=function(t){if(null==t)return n;var e,o,r=t.scale[0],a=t.scale[1],i=t.translate[0],s=t.translate[1];return function(t,n){n||(e=o=0);var l=2,c=t.length,u=new Array(c);for(u[0]=(e+=t[0])*r+i,u[1]=(o+=t[1])*a+s;l<c;)u[l]=t[l],++l;return u}}(t.transform),r=t.arcs;function a(t,e){e.length&&e.pop();for(var n=r[t<0?~t:t],a=0,i=n.length;a<i;++a)e.push(o(n[a],a));t<0&&function(t,e){for(var o,n=t.length,r=n-e;r<--n;)o=t[r],t[r++]=t[n],t[n]=o}(e,i)}function i(t){return o(t)}function s(t){for(var e=[],o=0,n=t.length;o<n;++o)a(t[o],e);return e.length<2&&e.push(e[0]),e}function l(t){for(var e=s(t);e.length<4;)e.push(e[0]);return e}function c(t){return t.map(l)}return function t(e){var o,n=e.type;switch(n){case"GeometryCollection":return{type:n,geometries:e.geometries.map(t)};case"Point":o=i(e.coordinates);break;case"MultiPoint":o=e.coordinates.map(i);break;case"LineString":o=s(e.arcs);break;case"MultiLineString":o=e.arcs.map(s);break;case"Polygon":o=c(e.arcs);break;case"MultiPolygon":o=e.arcs.map(c);break;default:return null}return{type:n,coordinates:o}}(e)}(t,e);return null==o&&null==r?{type:"Feature",properties:a,geometry:i}:null==r?{type:"Feature",id:o,properties:a,geometry:i}:{type:"Feature",id:o,bbox:r,properties:a,geometry:i}}o.d(e,{zL:()=>r})}}]);